---
name: 'build container images'

on:
  push:
    branches:
      - master
      - main
    tags:
      - '*'
concurrency:
  group: ci-image-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=masaengineering/oracle
          VERSION=${GITHUB_REF#refs/heads/}
          BINARY_VERSION=$(git describe --always --tags --dirty)
          SHORTREF=${GITHUB_SHA::8}
          
          # If this is git tag, use the tag name as a docker tag and mark as latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          else
            # For branches, tag with branch name, branch-latest, and commit hash
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${VERSION}-latest,${DOCKER_IMAGE}:${SHORTREF}"
          fi
          
          # Set output parameters.
          echo ::set-output name=binary_version::${BINARY_VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            VERSION=${{ steps.prep.outputs.binary_version }}
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}